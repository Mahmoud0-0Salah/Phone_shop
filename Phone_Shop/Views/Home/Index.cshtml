@model IEnumerable<Product>
@{
    ViewData["Title"] = "Home Page";
}


  <link rel="stylesheet" href="~/css/bootstrap.min.css" />
  <link rel="stylesheet" href="~/css/home.css" />


  <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css" rel="stylesheet">
  <div class="container">
    <div class="row">
      <div class="col-sm-4 col-md-3">
        <form method="get" name="searchForm">
          <div class="well">
            <div class="row">
              <div class="col-sm-12">
                <div class="input-group">
                  <input type="text" name="search" class="form-control" placeholder="Search products...">
                  <span class="input-group-btn">
                    <button class="btn btn-primary" type="submit">
                      <i class="fa fa-search"></i>
                    </button>
                  </span>
                </div>
              </div>
            </div>
          </div>
        </form>


          <h3 class="headline">
            <span>Price</span>
          </h3>
          <p>Custom</p>
          <div class="radio">
                <form id="priceForm" name="PriceForm" method="post" asp-route-Des="@ViewData["Des"]" asp-route-PageNumber="1" asp-route-search="@ViewData["search"]">
                        <label for="LowestPrice">Lowest Price:</label>
                        <input type="number" id="LowestPrice" name="LowestPrice" step="0.01" required>
                        <br>

                        <label for="MaxmiumPrice">Maximum Price:</label>
                        <input type="number" id="MaxmiumPrice" name="MaxmiumPrice" step="0.01" required>
                        <br>

                        <input type="submit" value="Submit">
                 </form>
          </div>

         @* <h3 class="headline">
            <span>Brand</span>
          </h3>
          <div class="checkbox">
            <input type="checkbox" value id="shop-filter-checkbox_1" checked>
            <label for="shop-filter-checkbox_1">Adidas</label>
          </div>
          <div class="checkbox">
            <input type="checkbox" value id="shop-filter-checkbox_2">
            <label for="shop-filter-checkbox_2">Calvin Klein</label>
          </div>
          <div class="checkbox">
            <input type="checkbox" value id="shop-filter-checkbox_3">
            <label for="shop-filter-checkbox_3">Columbia</label>
          </div>
          <div class="checkbox">
            <input type="checkbox" value id="shop-filter-checkbox_4">
            <label for="shop-filter-checkbox_4">Tommy Hilfiger</label>
          </div>
          <div class="checkbox">
            <input type="checkbox" value id="shop-filter-checkbox_5">
            <label for="shop-filter-checkbox_5">Not specified</label>
                </div> *@
      </div>
      <div class="col-sm-8 col-md-9">

        <ul class="shop__sorting">
          @* <li class="active"><a href="#">Popular</a></li>
          <li><a href="#">Newest</a></li>
                <li><a href="#">Bestselling</a></li>*@
                <a asp-route-Des="true" asp-route-PageNumber="1" asp-route-MaxmiumPrice="@ViewData["MaxmiumPrice"]" asp-route-LowestPrice="@ViewData["LowestPrice"]" asp-route-search="@ViewData["search"]" style="padding-right:5px">
             Price (high)
            </a>
                <a asp-route-Des="false" asp-route-PageNumber="1" asp-route-MaxmiumPrice="@ViewData["MaxmiumPrice"]" asp-route-LowestPrice="@ViewData["LowestPrice"]" asp-route-search="@ViewData["search"]">
                Price (low)
            </a>
       </ul>
        <div class="row">
                @foreach (var product in Model)
                {
                    <style>
                        .buttons {
                            position: absolute;
                            bottom: -150px
                        }

                        .card:hover .buttons {
                            animation: buttons 500ms ease-in forwards
                        }
                    </style>
                    <div class="col-sm-6 col-md-4">
                        <div class="shop__thumb">
                                <div class="shop-thumb__img">
                                <img src="@product.ImgUrl" class="img-responsive" alt="Product Image" width="400" height="400">
                                </div>
                                <h5 class="shop-thumb__title">
                                    @product.Name
                                </h5>
                                <div class="shop-thumb__price">
                                    <span class="shop-thumb-price_new">$@product.Price</span>
                                </div>
                            <a asp-action="ProductDetail" asp-controller="Product" asp-route-id="@product.Id">
                               <button class="btn btn-outline-danger w-100" onclick="/pivacy" style="padding-bottom:3px">View</button>
                            </a>
                        </div>
                    </div>
                }
          </div>
        </div>


        <style>
            .pagination {
                display: flex;
                justify-content: flex-end;
                margin-bottom: 20px;
            }

                .pagination .page-item {
                    margin-left: 5px; 
                }

                .pagination .page-link {
                    color: black;
                }
        </style>

        <nav aria-label="Page navigation example" style="padding-bottom: 5%">
            <ul class="pagination">
                <li class="page-item">
                    <a class="page-link" asp-action="index" asp-route-PageNumber="1" asp-route-MaxmiumPrice="@ViewData["MaxmiumPrice"]"
                       asp-route-LowestPrice="@ViewData["LowestPrice"]"
                       asp-route-Des="@ViewData["Des"]">First Page</a>
                </li>
                 @if ((int)ViewData["pagenumber"]!=1)
                 {
                   <li class="page-item"><a class="page-link" asp-action="index" asp-route-PageNumber="@((int)ViewData["pagenumber"]-1)"
                           asp-route-MaxmiumPrice="@ViewData["MaxmiumPrice"]"
                           asp-route-LowestPrice="@ViewData["LowestPrice"]"
                           asp-route-Des="@ViewData["Des"]">Previous</a>
                    </li>
                 }

                @for (var i = Math.Max((int)ViewData["pagenumber"]-9, 1); i <= Math.Min((int)ViewData["pagenumber"]+9,  (int)ViewData["LastPageNumber"]); i++)
                {
                    <li class="page-item"><a class="page-link" asp-action="index" asp-route-PageNumber="@i"
                        asp-route-MaxmiumPrice="@ViewData["MaxmiumPrice"]"
                        asp-route-LowestPrice="@ViewData["LowestPrice"]"
                        asp-route-Des="@ViewData["Des"]">@i</a></li>
                }
                @if ((int)ViewData["pagenumber"]+9 < (int)ViewData["LastPageNumber"])
                {
                  <li class="page-item"><a class="page-link" asp-action="index" asp-route-PageNumber="@((int)ViewData["pagenumber"]+1)">Next</a></li>
                }
            </ul>
        </nav>
    </div>
  </div>

@section Scripts{
    <script src="https://code.jquery.com/jquery-1.10.2.min.js"></script>
    <script src="~/js/bootstrap.min.js"></script>
   @*  <script type="text/javascript">
        // Wait for the DOM to be ready
        $(document).ready(function () {
            // Handle the form submission for the search form
            $("form[name='searchForm']").submit(function (event) {
                event.preventDefault(); // Prevent the default form submission

                // Get the search term from the input
                var searchTerm = $(this).find("input[name='search']").val();

                // Update the URL based on the search term and reset page to 1
                updateUrl(searchTerm, null, null, 1);

                // You can add additional logic here if needed

                // Perform any other actions (e.g., fetching search results)
            });

            // Handle the form submission for the price filter form
            $("form[name='priceForm']").submit(function (event) {
                event.preventDefault(); // Prevent the default form submission

                // Get the values of the price filter inputs
                var lowestPrice = $(this).find("input[name='LowestPrice']").val();
                var maximumPrice = $(this).find("input[name='MaxmiumPrice']").val();

                // Update the URL based on the price filter values and reset page to 1
                updateUrl(null, lowestPrice, maximumPrice, 1);

                // You can add additional logic here if needed

                // Perform any other actions (e.g., fetching filtered results)
            });

            // Handle pagination clicks
            $("ul.pagination a").click(function (event) {
                event.preventDefault(); // Prevent the default link behavior

                // Get the page number from the clicked link
                var pageNumber = $(this).text();

                // Update the URL with the new page number
                updateUrl(null, null, null, pageNumber);

                // You can add additional logic here if needed

                // Perform any other actions (e.g., fetching results for the clicked page)
            });

            // Handle sorting clicks
            $("ul.shop__sorting a").click(function (event) {
                event.preventDefault(); // Prevent the default link behavior

                // Get the sorting direction from the clicked link
                var descending = $(this).attr("asp-route-Des");

                // Update the URL with the new sorting direction and reset page to 1
                updateUrl(null, null, null, 1, descending);

                // You can add additional logic here if needed

                // Perform any other actions (e.g., fetching sorted results)
            });

            // Function to update the URL
            function updateUrl(searchTerm, lowestPrice, maximumPrice, pageNumber, descending) {
                var baseUrl = window.location.href.split('?')[0]; // Get the base URL without parameters
                var params = new URLSearchParams(window.location.search);

                // Update or add the search term
                if (searchTerm !== null) {
                    params.set('search', searchTerm);
                }

                // Update or add the lowest price filter
                if (lowestPrice !== null) {
                    params.set('LowestPrice', lowestPrice);
                }

                // Update or add the maximum price filter
                if (maximumPrice !== null) {
                    params.set('MaxmiumPrice', maximumPrice);
                }

                // Update or add the page number
                params.set('PageNumber', pageNumber);

                // Update or add the sorting direction
                if (descending !== undefined) {
                    params.set('Des', descending);
                }

                // Construct the updated URL
                var updatedUrl = baseUrl + '?' + params.toString();

                // Redirect to the updated URL
                window.location.href = updatedUrl;
            }
        });
    </script> *@
}


