@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
        @if (User.IsInRole("Customer") || User.IsInRole("Seller"))
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="" asp-controller="Accounts" asp-action="Profile">My Profile</a>
            </li>
        }

        @if (User.IsInRole("Seller"))

        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="" asp-controller="Product" asp-action="Create">Sell</a>
            </li>

            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="" asp-controller="Store" asp-action="Create">Add store</a>
            </li>
        }
    
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
